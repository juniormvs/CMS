@model Model.Publicacao
<div class="space-10"></div>

<div class="col-md-12">
    <div class="col-md-10">

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control", maxlength = "140" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Resumo, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextAreaFor(model => model.Resumo, new { @class = "form-control", maxlength = "200" })
                @Html.ValidationMessageFor(model => model.Resumo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Texto, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.TextAreaFor(model => model.Texto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Texto, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-2 col-xs-12 col-sm-12">
        <div class="form-group">
            @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                <span class="profile-picture">
                    @if (Model == null)
                    {
                        <img id="avatar" class="editable img-responsive" alt="" src="@Url.Content("~/Content/images/upload.jpg")" style="max-height: 200px;" />
                    }
                    else
                    {
                        if (Model?.Imagem == null)
                        {
                            <img id="avatar" class="editable img-responsive" alt="" src="@Url.Content("~/Content/images/upload.jpg")" style="max-height: 200px;" />
                        }
                        else
                        {
                            <img id="avatar" class="editable img-responsive" alt="" src="@Url.Action("Publicacao","Img", new { id = Model.Id})" style="max-height: 200px;" />
                        }
                    }
                    @Html.HiddenFor(model => model.Imagem)
                </span>
                @Html.ValidationMessageFor(model => model.Imagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataPublicacao, htmlAttributes: new { @class = "control-label col-xs-12 col-sm-12 col-md-12" })
            <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="input-group">

                @Html.TextBoxFor(m => m.DataPublicacao, "{0:dd/MM/yyyy HH:mm}", htmlAttributes: new { @class = "form-control date-timepicker" })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
                </div>
                @*@Html.ValidationMessageFor(model => model.DataPublicacao, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StatusId, "Status", htmlAttributes: new { @class = "control-label col-xs-12 col-sm-12 col-md-12" })
            <div class="col-xs-12 col-sm-12 col-md-12">
                @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-xs-12 col-sm-12 col-md-12 no-padding-right" for="CategoriaId">Categorias</label>
            <div class="col-xs-12 col-sm-12 col-md-12">
                @Html.DropDownList("categorias", (MultiSelectList)ViewBag.Categorias, new { @class = "form-control multiselect", multiple = "multiple" })
            </div>
            
        </div>

        <div class="form-group">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(model => model.ExibirComoPopup, new { htmlAttributes = new { @class = "ace" } })
                    <span class="lbl"> Exibir Como Popup</span>
                </label>
            </div>
        </div>
        @*<div class="form-group">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(model => model.PostarNoFacebook, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="lbl"> Publicar no Facebook</span>
                </label>
            </div>
        </div>*@
    </div>
</div>
<div class="col-md-12">
    <div class="form-group" style="margin-left: 10px">
        
        <input type="submit" name="command" value="@ViewBag.BtnSalvar" class="btn btn-primary" />
        @if (Model?.StatusId != Util.Constants.STATUS_PUBLICADO_ID)
        {
            <input type="submit" name="command" value="Publicar" class="btn btn-success" />
        }
        <input type="button" value="Voltar" class="cancel btn btn-default" onclick="location.href = '@Url.Action("index","publicacao")'" />
    </div>
</div>


