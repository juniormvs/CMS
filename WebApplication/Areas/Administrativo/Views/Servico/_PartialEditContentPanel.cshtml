@model Model.Servico
<div class="space-10"></div>
<div class="form-group">
    <div class="col-lg-offset-1">
        <p><small><strong>Recomendações</strong></small></p>
        <p><small>Tamanho recomendado: <strong>600x400px</strong></small></p>
        <p><small>É recomendado fotos em posição de paisagem (horizontal).</small>
            <small><strong>Não</strong> é recomendado fotos em posição de retrato (vertical).</small>
        </p>
    </div>
</div>
<div class="space-10"></div>
<div class="form-group">
    @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-10">
        <span class="profile-picture">
            @if (Model == null || Model.Imagem == null)
            {
                <img id="avatar" class="editable img-responsive" alt="" src="~/Content/upload/upload.jpg" style="max-height: 200px;" />
            }
            else
            {
                <img id="avatar" class="editable img-responsive" alt="" src="@Url.Action("Servico","Img", new { id = Model.Id})" style="max-height: 200px;" />
            }
            @Html.HiddenFor(model => model.Imagem)
        </span>
        @Html.ValidationMessageFor(model => model.Imagem, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    <div class="col-md-1"></div>
    <div class="col-md-6">
        <p><strong>Preencha os campos abaixo, caso deseje adicionar textos, e links. Os campos são opcionais.</strong></p>
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-6">
        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", maxlength = "45" } })
        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Icone, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-xs-2 col-sm-12 col-md-2">
        @Html.EditorFor(model => model.Icone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Icone, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Ativo, "Status", htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-4">
        <label class="control-label">
            @Html.CheckBoxFor(model => model.Ativo, new { @checked = "checked" }) Cadastro Ativo
        </label>
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Resumo, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-6">
        @Html.TextAreaFor(model => model.Resumo, htmlAttributes: new { @class = "form-control", maxlength = "120" })
        @Html.ValidationMessageFor(model => model.Resumo, "", new { @class = "text-danger" })
        <p id="contadorResumo"></p>
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-11">
        @Html.TextAreaFor(model => model.Descricao, htmlAttributes : new { @class = "form-control"})
        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <div class="col-md-offset-1 col-md-10">
        <input type="submit" value="Salvar" class="btn btn-success" />
        <input type="button" value="Voltar" class="cancel btn btn-default" onclick="location.href = '@Url.Action("index","Servico")'" />
    </div>
</div>

